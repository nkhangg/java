/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.PetManagementController;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import model.ObjPet;
import model.Pet;
import model.PetManagementModel;

/**
 *
 * @author PC
 */
public class PetManagementView extends javax.swing.JFrame implements Runnable {

    private DefaultTableModel modelTable;
    private PetManagementController controller;
    private PetManagementModel model;
//    public int listSize ;

    /**
     * Creates new form PetManagementView
     */
    public PetManagementView() {
        initComponents();
        controller = new PetManagementController(this);
        model = new PetManagementModel();
//        listSize = this.model.getList().size();
//        init();
        action();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jDialog2 = new javax.swing.JDialog();
        jDialog3 = new javax.swing.JDialog();
        jDialog4 = new javax.swing.JDialog();
        groupBtn = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        male = new javax.swing.JRadioButton();
        female = new javax.swing.JRadioButton();
        namePet = new javax.swing.JTextField();
        age = new javax.swing.JTextField();
        Id = new javax.swing.JTextField();
        type = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        nameAuth = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        phone = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        total = new javax.swing.JTextField();
        service = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        save = new javax.swing.JButton();
        open = new javax.swing.JButton();
        find = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        record = new javax.swing.JLabel();
        prev = new javax.swing.JButton();
        next = new javax.swing.JButton();
        first = new javax.swing.JButton();
        end = new javax.swing.JButton();
        clock = new javax.swing.JLabel();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog3Layout = new javax.swing.GroupLayout(jDialog3.getContentPane());
        jDialog3.getContentPane().setLayout(jDialog3Layout);
        jDialog3Layout.setHorizontalGroup(
            jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog3Layout.setVerticalGroup(
            jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog4Layout = new javax.swing.GroupLayout(jDialog4.getContentPane());
        jDialog4.getContentPane().setLayout(jDialog4Layout);
        jDialog4Layout.setHorizontalGroup(
            jDialog4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog4Layout.setVerticalGroup(
            jDialog4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(17, 7, 60));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Pet Management");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(138, 114, 61));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Pet");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("ID");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Name");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Type");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Age");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Genther");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        groupBtn.add(male);
        male.setSelected(true);
        male.setText("Male");
        male.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maleActionPerformed(evt);
            }
        });

        groupBtn.add(female);
        female.setText("Female");
        female.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                femaleActionPerformed(evt);
            }
        });

        namePet.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        age.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        age.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        Id.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        type.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select Type--", "Dog", "Cat" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel4))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Id, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(age, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(namePet, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(male)
                        .addGap(18, 18, 18)
                        .addComponent(female)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(Id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(namePet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel15)
                    .addComponent(male)
                    .addComponent(female))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(138, 114, 61));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Auth");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Name");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Email");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Phone");

        nameAuth.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        email.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        phone.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        phone.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        phone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addGap(44, 44, 44)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(phone, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameAuth, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(90, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(nameAuth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(138, 114, 61));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Shop");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Service");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Total");

        total.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        total.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        total.setText("0");
        total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalActionPerformed(evt);
            }
        });

        service.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        service.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select Service--", "Shower", "Feathers Cut" }));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(total, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(service, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(100, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(service, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        table.setToolTipText("");
        jScrollPane1.setViewportView(table);

        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        open.setText("Open");
        open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openActionPerformed(evt);
            }
        });

        find.setText("Find");

        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        delete.setText("Delete");

        exit.setText("Exit");

        record.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        record.setForeground(new java.awt.Color(255, 0, 51));
        record.setText("Record 1 of 10");

        prev.setText("<<");

        next.setText(">>");

        first.setText("|<");

        end.setText(">|");

        clock.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        clock.setForeground(new java.awt.Color(255, 0, 0));
        clock.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        clock.setText("Clock");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(prev)
                                .addGap(60, 60, 60)
                                .addComponent(next))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(first)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(end)))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(record, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(180, 180, 180)
                        .addComponent(save)
                        .addGap(18, 18, 18)
                        .addComponent(open)
                        .addGap(18, 18, 18)
                        .addComponent(find)
                        .addGap(18, 18, 18)
                        .addComponent(btnNew)
                        .addGap(18, 18, 18)
                        .addComponent(delete)
                        .addGap(18, 18, 18)
                        .addComponent(exit))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(clock, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(clock)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(first)
                                    .addComponent(end))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(prev)
                                    .addComponent(next)))))
                    .addComponent(record, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(save)
                    .addComponent(open)
                    .addComponent(find)
                    .addComponent(btnNew)
                    .addComponent(delete)
                    .addComponent(exit))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void maleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maleActionPerformed

    private void femaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_femaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_femaleActionPerformed

    private void phoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneActionPerformed

    private void totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        init();
    }//GEN-LAST:event_formWindowOpened

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveActionPerformed

    private void openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_openActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnNewActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PetManagementView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PetManagementView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PetManagementView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PetManagementView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PetManagementView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Id;
    private javax.swing.JTextField age;
    private javax.swing.JButton btnNew;
    private javax.swing.JLabel clock;
    private javax.swing.JButton delete;
    private javax.swing.JTextField email;
    private javax.swing.JButton end;
    private javax.swing.JButton exit;
    private javax.swing.JRadioButton female;
    private javax.swing.JButton find;
    private javax.swing.JButton first;
    private javax.swing.ButtonGroup groupBtn;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JDialog jDialog3;
    private javax.swing.JDialog jDialog4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton male;
    private javax.swing.JTextField nameAuth;
    private javax.swing.JTextField namePet;
    private javax.swing.JButton next;
    private javax.swing.JButton open;
    private javax.swing.JTextField phone;
    private javax.swing.JButton prev;
    private javax.swing.JLabel record;
    private javax.swing.JButton save;
    private javax.swing.JComboBox<String> service;
    private javax.swing.JTable table;
    private javax.swing.JTextField total;
    private javax.swing.JComboBox<String> type;
    // End of variables declaration//GEN-END:variables

    public void action() {
        this.save.addActionListener(controller);
        this.open.addActionListener(controller);
        this.exit.addActionListener(controller);
        this.find.addActionListener(controller);
        this.btnNew.addActionListener(controller);
        this.delete.addActionListener(controller);
        this.table.addMouseListener(controller);
        this.service.addActionListener(controller);
        this.prev.addActionListener(controller);
        this.next.addActionListener(controller);
        this.first.addActionListener(controller);
        this.end.addActionListener(controller);

    }

    public void init() {
        this.initTable();
        this.clock();
//        this.initValueTable();
        this.render();
        showRecord(0);
    }

    public void initTable() {
        modelTable = (DefaultTableModel) this.table.getModel();
        String[] cols = new String[]{"ID", "Name Pet", "Type", "Age", "Genther", "Name Auth", "Phone", "Email", "Service", "Total"};
        modelTable.setColumnIdentifiers(cols);
    }

    public void initValueTable() {

        this.model.add(new Pet(1, "Husky", "Dog", true, 1, "Khang", "khang@gmail.com", "01234567", 123456, "Shower"));
        this.model.add(new Pet(2, "Doggy", "Cat", false, 1, "Khang", "khang@gmail.com", "1234567", 123456, "Shower"));
        this.model.add(new Pet(3, "Husky", "Dog", true, 2, "Khang", "khang@gmail.com", "1234567", 123456, "Feathers Cut"));
        this.model.add(new Pet(4, "Anh", "Cat", false, 1, "Khang", "khang@gmail.com", "1234567", 123456, "Shower"));
        this.model.add(new Pet(5, "Golden", "Dog", true, 1, "Khang", "khang@gmail.com", "1234567", 123456, "Feathers Cut"));

    }

    public void render() {
        this.model.sort();
        modelTable.setRowCount(0);
        String genther = "";
        for (Pet p : this.model.getList()) {
            if (p.isGenderPet()) {
                genther = "Male";
            } else {
                genther = "Female";
            }
            Object[] row = new Object[]{p.getId(), p.getNamePet(), p.getTypePet(), p.getAgePet(), genther, p.getNameAuth(), p.getStd(), p.getEmail(), p.getService(), p.getPrice()};
            modelTable.addRow(row);
        }
//        modelTable.fireTableDataChanged();
    }

    public void reset() {
        this.Id.setText("");
        this.namePet.setText("");
        this.type.setSelectedIndex(0);
        this.age.setText("");
        this.male.setSelected(true);
        this.nameAuth.setText("");
        this.email.setText("");
        this.phone.setText("");
        this.service.setSelectedIndex(0);
        this.total.setText("0");
    }

    // notification
    public void showWarning(String mess) {
        JOptionPane.showMessageDialog(this, mess, "Warning", JOptionPane.WARNING_MESSAGE);
    }

    public void showSuccess(String mess) {
        JOptionPane.showMessageDialog(this, mess, "Success", JOptionPane.INFORMATION_MESSAGE);
    }

    public boolean showSelected(String mess) {
        int chose = JOptionPane.showConfirmDialog(this, mess, "Notification", JOptionPane.YES_NO_OPTION);
        if (chose == JOptionPane.YES_OPTION) {
            return true;

        }

        return false;
    }

    public String showInput(String mess) {
        return JOptionPane.showInputDialog(this, mess);
    }

    //validator
    public boolean isEmty(JTextField input) {
        if (input.getText().equals("")) {
            return true;
        }
        return false;
    }

    public boolean isEmail(JTextField input) {
        Data dt = new Data();
        if (dt.isEmail(input.getText())) {
            return true;
        }
        return false;
    }

    public boolean isInt(JTextField input) {
        try {
            int number = Integer.parseInt(input.getText());
            return true;
        } catch (Exception e) {
            return false;
        }
    }

    public boolean isDouble(JTextField input) {
        try {
            double number = Double.parseDouble(input.getText());
            return true;
        } catch (Exception e) {
            return false;
        }
    }

    public boolean isSelected(JComboBox input) {
        if (input.getSelectedIndex() != 0) {
            return true;
        }
        return false;
    }

    public boolean validator() {
        boolean flag = true;
        if (!isEmty(Id)) {
            if (!isInt(Id)) {
                showWarning("ID not number");
                flag = false;
            }
        } else {
            showWarning("ID not emty !");
            flag = false;
        }

        if (isEmty(nameAuth) || isEmty(namePet)) {
            showWarning("Name not emty !");
            flag = false;
        }

        if (!isSelected(type) || !isSelected(service)) {
            showWarning("You missing select !");
            flag = false;
        }

        if (!isEmty(age)) {
            if (!isInt(age)) {
                showWarning("Age not number");
                flag = false;
            } else {
                try {
                    if (Integer.parseInt(age.getText()) <= 0) {
                        showWarning("Age must be greater than 0 !");
                        flag = false;
                    }
                } catch (Exception e) {
                }
            }
        } else {
            showWarning("Age not emty !");
            flag = false;
        }

        if (!isEmty(phone)) {
            Data dt = new Data();
            if (!isInt(phone)) {
                showWarning("Phone not number !");
                flag = false;
            }
        } else {
            showWarning("Phone not emty !");
            flag = false;
        }
        if (!isEmty(email)) {
            if (!isEmail(email)) {
                showWarning("Email invalid email !");
                flag = false;
            }

        } else {
            showWarning("Email not emty !");
            flag = false;
        }
        return flag;
    }

    // exit
    public void exit() {
        if (showSelected("Do you want to exit ?")) {
            this.save();
            System.exit(0);
        }
    }

    //show info
    public void showInfo() {
        int index = this.table.getSelectedRow();

        if (index >= 0) {
            this.Id.setText(this.model.getList().get(index).getId() + "");
            this.age.setText(this.model.getList().get(index).getAgePet() + "");
            this.nameAuth.setText(this.model.getList().get(index).getNameAuth());
            this.namePet.setText(this.model.getList().get(index).getNamePet());
            this.type.setSelectedItem(this.model.getList().get(index).getTypePet());
            this.service.setSelectedItem(this.model.getList().get(index).getService());
            this.email.setText(this.model.getList().get(index).getEmail());
            this.phone.setText(this.model.getList().get(index).getStd() + "");
            this.total.setText(this.model.getList().get(index).getPrice() + "");
            if (this.model.getList().get(index).isGenderPet()) {
                male.setSelected(true);
            } else {
                female.setSelected(true);
            }

        }

    }

    //total
    public void showTotal() {

        switch (service.getSelectedIndex()) {
            case 1:
                total.setText("120000");
                break;

            case 2:
                total.setText("200000");
                break;
            default:
                break;
        }
    }

    //find
    public void find() {

        String idValue = showInput("Enter your id ");

        try {
            int Id = Integer.parseInt(idValue);

            if (this.model.findIdReturnObj(Id) != null) {
                ObjPet p = this.model.findIdReturnObj(Id);
                showSuccess("Eligible id found");
                this.Id.setText(p.getP().getId() + "");
                this.age.setText(p.getP().getAgePet() + "");
                this.nameAuth.setText(p.getP().getNameAuth());
                this.namePet.setText(p.getP().getNamePet());
                this.type.setSelectedItem(p.getP().getTypePet());
                this.service.setSelectedItem(p.getP().getService());
                this.email.setText(p.getP().getEmail());
                this.phone.setText(p.getP().getStd() + "");
                this.total.setText(p.getP().getPrice() + "");

                if (p.getP().isGenderPet()) {
                    male.setSelected(true);
                } else {
                    female.setSelected(true);
                }

                showRecord(p.getIndex() + 1);
                fillFild(p.getIndex());

            } else {
                showWarning("ID not found !");
            }
        } catch (Exception e) {
            showWarning("Id only receive numbers");
        }
    }

    //save
    public void save() {
        try {
            this.model.save(this.model.getPath());
        } catch (Exception e) {
            showWarning(e.getMessage());
        }
    }

    // open
    public void read() {
        try {
            this.model.open(this.model.getPath());
            this.render();
        } catch (Exception e) {
            showWarning(e.getMessage());
        }
    }

    //delete
    public void delete() {
        if (!isEmty(Id)) {
            if (!isInt(Id)) {
                showWarning("ID not number");
                return;
            }
        } else {
            showWarning("ID not emty !");
            return;
        }

        try {
            if (this.model.find(Integer.parseInt(Id.getText())) != null) {
                if (showSelected("Do you want delete to ID ?")) {
                    Pet p = this.model.find(Integer.parseInt(Id.getText()));
                    this.model.remove(p);
                    render();
                    this.save();
                    this.reset();
                    showSuccess("Delete succesfuly !");

                }

            } else {
                showWarning("ID not found !");
            }
        } catch (Exception e) {
        }

    }

    //add
    public void add() {
        try {
            int id = Integer.parseInt(Id.getText());
            String namePet = this.namePet.getText();
            String nameAuth = this.nameAuth.getText();
            String type = this.type.getSelectedItem() + "";
            boolean genther = male.isSelected() ? true : false;
            String email = this.email.getText();
            int age = Integer.parseInt(this.age.getText());
//            int phone = Integer.parseInt(this.phone.getText());
            String phone = this.phone.getText();
            String service = this.service.getSelectedItem() + "";
            double total = Double.parseDouble(this.total.getText());

            Pet p = new Pet(id, namePet, type, genther, age, nameAuth, email, phone, total, service);

            this.model.add(p);
            this.render();
            this.save();
            showSuccess("Add succesfuly !");
        } catch (Exception e) {

        }
    }

    //update
    public void update(Pet input) {

        Pet p = input;
        p.setAgePet(Integer.parseInt(this.age.getText()));
        p.setNameAuth(nameAuth.getText());
        p.setNamePet(namePet.getText());
        p.setTypePet(this.type.getSelectedItem() + "");
        p.setService(this.service.getSelectedItem() + "");
        p.setEmail(this.email.getText());
//        p.setStd(Integer.parseInt(this.phone.getText()));
        p.setStd(this.phone.getText());
        p.setPrice(Double.parseDouble(this.total.getText()));

        if (this.male.isSelected()) {
            p.setGenderPet(true);
        } else {
            p.setGenderPet(false);
        }
        this.render();
        this.save();
        showSuccess("Update succesfuly !");
    }

    // handle save
    public void handleSave() {
        if (validator()) {
            try {
                if (this.model.find(Integer.parseInt(Id.getText())) != null) {
                    this.update(this.model.find(Integer.parseInt(Id.getText())));
                } else {
                    this.add();
                }
            } catch (Exception e) {

            }
        }
    }

    // fillFild
    public void fillFild(int index) {
        this.table.setRowSelectionInterval(index, index);
        Pet p = this.model.getList().get(index);
        this.Id.setText(p.getId() + "");
        this.nameAuth.setText(p.getNameAuth());
        this.namePet.setText(p.getNamePet());
        this.age.setText(p.getAgePet() + "");
        this.email.setText(p.getEmail());
        this.phone.setText(p.getStd() + "");
        this.service.setSelectedItem(p.getService());
        this.type.setSelectedItem(p.getTypePet());
        this.total.setText(p.getPrice() + "");
        this.male.setSelected(p.isGenderPet() ? true : false);
        this.female.setSelected(!p.isGenderPet() ? true : false);

    }

    //showRecord
    public void showRecord(int i) {
        int index = this.model.getList().size();
        record.setText("Record " + i + " of " + index);
    }

    //getListSize
    public int getListSize() {
        return this.model.getListSize();
    }

    //checkError
    public boolean checkError() {
        if (this.getListSize() <= 0) {
            return false;
        }
        return true;
    }

    public int showSelectedToTable() {
        return this.table.getSelectedRow();
    }

    public void clock() {
        Thread time = new Thread(this);
        time.start();
    }

    @Override
    public void run() {
        while (true) {
            Date now = new Date();
            SimpleDateFormat spf = new SimpleDateFormat("HH:mm:ss aa");
            this.clock.setText(spf.format(now));

            try {
                Thread.sleep(1000);
            } catch (InterruptedException ex) {

            }
        }
    }
}
